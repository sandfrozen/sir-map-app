{"version":3,"sources":["components/GoogleApiWrapper/GoogleApiWrapper.js","components/LinearBuffer.js","components/Weather/Weather.js","components/CityInfo/CityInfo.js","components/News/News.js","components/Flicker/Photo.js","components/Flicker/Flicker.js","App.js","serviceWorker.js","index.js"],"names":["containerStyle","position","width","height","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onClick","target","map","coord","lat","latLng","lng","props","setNewCoords","inherits","createClass","key","value","_this$props","react_default","a","createElement","dist","google","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","LoadingContainer","LinearBuffer","state","completed","buffer","progress","setState","diff","Math","random","diff2","timer","setInterval","clearInterval","classes","_this$state","className","root","LinearProgress_default","variant","valueBuffer","React","withStyles","flexGrow","paddingTop","DarkSkyApi","units","Weather","weather","getWeather","latitude","longitude","loadCurrent","then","result","nextProps","_this$props2","coordsDiv","style","components_LinearBuffer","img_src","icon","src","alt","temperature","summary","humidity","pressure","visibility","windSpeed","windDirection","windGust","CityInfo","street","street_number","city","country","fetchingAddress","fetchingFlag","population","fetchingError","fetchingTime","timeZone","textAlign","react","flag","lib_default","format","ticking","timezone","News","news","fetchingNews","listOfNews","n","url","href","source","name","title","Photo","_handleOnClickPhoto","link","event","handleOnClickPhoto","id","secret","farm","server","Flicker","console","log","document","getElementById","display","handleOnClickClose","_this2","photos","fetchingPhotos","ps","p","Flicker_Photo","newsapi","NewsAPI","App","country_code","getAddress","getFlicker","getTime","old_country","old_country_code","axios","get","data","results","address_components","forEach","types","includes","long_name","short_name","getCountryInfo","getNews","_unused","v2","topHeadlines","category","language","response","articles","old_timezone","_this$state2","timeZoneId","_this$state3","photo","_this$state4","components_Weather_Weather","components_CityInfo_CityInfo","components_Flicker_Flicker","components_News_News","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cca9571e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\nimport './style.css'\n\nconst containerStyle = { position: 'relative', width: '100%', height: '60vh' }\n\nexport class MapContainer extends Component {\n\n  onClick = (target, map, coord) => {\n    let lat = coord.latLng.lat()\n    let lng = coord.latLng.lng()\n    //console.log(target, map, coord)\n\n    this.props.setNewCoords(lat, lng)\n  }\n\n  render () {\n    const { lat, lng } = this.props\n    return (\n      <Map\n        google={this.props.google}\n        zoom={2}\n        containerStyle={containerStyle}\n        onClick={this.onClick}\n        initialCenter={{\n          lat: 41.69452881805707,\n          lng: -8.846923664502128\n        }}\n      >\n        <Marker\n          position={{ lat: lat, lng: lng }}\n        />\n      </Map>\n    )\n  }\n}\n\nconst LoadingContainer = (props) => (\n  <div>Map is loading...</div>\n)\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCFmio79TncN-TlcoFdOX1K8WPxIQHUwxw',\n  LoadingContainer: LoadingContainer\n})(MapContainer)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    paddingTop: 2\n  },\n};\n\nclass LinearBuffer extends React.Component {\n  state = {\n    completed: 0,\n    buffer: 10,\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    if (completed > 100) {\n      this.setState({ completed: 0, buffer: 10 });\n    } else {\n      const diff = Math.random() * 10;\n      const diff2 = Math.random() * 10;\n      this.setState({ completed: completed + diff, buffer: completed + diff + diff2 });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { completed, buffer } = this.state;\n    return (\n      <div className={classes.root}>\n        <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\n      </div>\n    );\n  }\n}\n\nLinearBuffer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LinearBuffer);","import React, { Component } from 'react'\n// import axios from 'axios'\nimport './style.css'\nimport DarkSkyApi from 'dark-sky-api'\nimport LinearBuffer from '../LinearBuffer'\n\nDarkSkyApi.apiKey = 'cebde3da6c210680a9368ee7a3b1d7ee'\nDarkSkyApi.units = 'si'\n\nclass Weather extends Component {\n  state = {\n    weather: null\n  }\n\n  componentDidMount () {\n    this.getWeather()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.props = nextProps\n    this.getWeather()\n  }\n\n  getWeather = () => {\n    this.setState({ weather: null })\n    let { lat, lng } = this.props\n    const position = {\n      latitude: lat,\n      longitude: lng\n    }\n    DarkSkyApi.loadCurrent(position).then(result => {\n      this.setState({ weather: result })\n    })\n  }\n\n  render () {\n    let { weather } = this.state\n    let { lat, lng } = this.props\n\n    let coordsDiv = (\n      <div style={{ paddingTop: '20px' }}>\n        <div className='coords'>LOCATION: {lat}</div>\n        <div className='coords'>{lng}</div>\n      </div>\n    )\n\n    if (weather === null) {\n      return (\n        <div>\n          <div>\n            <div>Calculating weather data...</div>\n            <LinearBuffer />\n            {coordsDiv}\n          </div>\n        </div>\n      )\n    } else {\n      let img_src =\n        'https://darksky.net/images/weather-icons/' + weather.icon + '.png'\n\n      return (\n        <div className='weather_container'>\n          <span className='currently'>\n            <span className='cloudy-icon currently-icon swip'>\n              <img width='84' height='84' src={img_src} alt='cloudy Icon' />\n            </span>\n            <span className='desc swap'>\n              <span className='summary swap'>\n                {weather.temperature}˚ {weather.summary}.\n              </span>\n              <div className='summary-high-low'>\n                <div>\n                  <span className='high-low-label'>Humidity:</span>\n                  {weather.humidity} %\n                </div>\n                <div>\n                  <span className='high-low-label'>Pressure:</span>\n                  {weather.pressure} hpa\n                </div>\n                <div>\n                  <span className='high-low-label'>Visibility:</span>\n                  {weather.visibility} km\n                </div>\n                <div>\n                  <span className='high-low-label'>Wind:</span>\n                  {weather.windSpeed} km/h ({weather.windDirection})\n                </div>\n                <div>\n                  <span className='high-low-label'>Wind gust:</span>\n                  {weather.windGust} km/h\n                </div>\n              </div>\n            </span>\n          </span>\n          {coordsDiv}\n        </div>\n      )\n    }\n  }\n}\n\nexport default Weather\n","import React, { Component, Fragment } from 'react'\nimport './style.css'\nimport LinearBuffer from '../LinearBuffer'\nimport Clock from 'react-live-clock'\n\nclass CityInfo extends Component {\n  render () {\n    let {\n      street,\n      street_number,\n      city,\n      country,\n      fetchingAddress,\n      fetchingFlag,\n      population,\n      fetchingError,\n      fetchingTime,\n      timeZone\n    } = this.props\n    if (fetchingError === true) {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <div>Choose a different place.</div>\n          <div className='cannot'>CAN NOT FETCH DATA FOR THIS LOCATION</div>\n        </div>\n      )\n    } else {\n      return (\n        <Fragment>\n          {fetchingAddress === false && (\n            <div className='city_details'>\n              <div className='country'>{country}</div>\n              <div className='city'>{city}</div>\n              <div className='street'>\n                {street} {street_number}\n              </div>\n            </div>\n          )}\n          {fetchingAddress === true && (\n            <div>\n              Address is loading...\n              <LinearBuffer />\n            </div>\n          )}\n          <hr style={{ width: 100 }} />\n          <div className='city_population'>\n            {fetchingFlag === true && (\n              <div>\n                Flag is loading...\n                <LinearBuffer />\n              </div>\n            )}\n            {fetchingFlag === false && (\n              <div>\n                <img\n                  src={population.flag}\n                  className='flag'\n                  width='100'\n                  height='auto'\n                  alt='flag'\n                />\n              </div>\n            )}\n          </div>\n          <hr style={{ width: 100 }} />\n          <div className='city_population'>\n            {fetchingTime === true && (\n              <div>\n                Time is loading...\n                <LinearBuffer />\n              </div>\n            )}\n            {fetchingTime === false && (\n              <div className='time_container'>\n                <Clock format={'HH:mm:ss'} ticking timezone={timeZone} />\n                <Clock format={'dddd, MMMM Do YYYY'} timezone={timeZone} />\n              </div>\n            )}\n          </div>\n        </Fragment>\n      )\n    }\n  }\n}\n\nexport default CityInfo\n","import React, { Component } from 'react'\n\nimport './style.css'\nimport LinearBuffer from '../LinearBuffer'\n\nclass News extends Component {\n  render () {\n    let { news, fetchingNews, country } = this.props\n    if (fetchingNews === true) {\n      return (\n        <div>\n          Searching for news in {country}...\n          <LinearBuffer />\n        </div>\n      )\n    } else {\n      const listOfNews = news.map(n => (\n        <li key={n.url}>\n          <a href={n.url} target='_blank'>\n            {n.source.name}\n          </a>\n          <br />\n          {n.title}\n        </li>\n      ))\n      if (listOfNews.length === 0) {\n        return <div>Could not find news from {country}.</div>\n      } else {\n        return (\n          <div className='news_container'>\n            <div className='h4_container'>News in {country}:</div>\n\n            <div className='news_list'>\n              <ul>{listOfNews}</ul>\n            </div>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default News\n","import React, { Component } from 'react'\n\nclass Photo extends Component {\n  _handleOnClickPhoto = (link, title) => event => {\n    this.props.handleOnClickPhoto(link, title)\n  }\n\n  render () {\n    let { id, secret, farm, server, title } = this.props\n    const link = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`\n    return (\n      <img\n        src={link}\n        onClick={this._handleOnClickPhoto(link, title)}\n        className='photo'\n        alt={title}\n      />\n    )\n  }\n}\n\nexport default Photo\n","import React, { Component } from 'react'\n\nimport LinearBuffer from '../LinearBuffer'\nimport Photo from './Photo'\n\nimport './style.css'\n\nclass Flicker extends Component {\n  state = { link: '', title: '' }\n\n  handleOnClickPhoto = (link, title) => {\n    console.log(link, title)\n    this.setState({ link, title }, () => {\n      var modal = document.getElementById('myModal');\n      modal.style.display = \"block\";\n    })\n  }\n\n  handleOnClickClose = () => {\n    var modal = document.getElementById('myModal');\n    modal.style.display = \"none\";\n  }\n\n  render () {\n    const { photos, fetchingPhotos } = this.props\n    if (fetchingPhotos === true) {\n      return (\n        <div>\n          <div>Downloading photos...</div>\n          <LinearBuffer />\n        </div>\n      )\n    } else {\n      const ps = photos.map(p => (\n        <Photo\n          id={p.id}\n          key={p.id}\n          secret={p.secret}\n          farm={p.farm}\n          server={p.server}\n          title={p.title}\n          handleOnClickPhoto={this.handleOnClickPhoto}\n        />\n      ))\n      if (ps.length === 0) {\n        return (\n          <div className='no_photos_container'>\n            No photos from this location.\n          </div>\n        )\n      } else {\n        const {link, title} = this.state\n        return (\n          <div className='photos_container'>\n            {ps}\n              <div id='myModal' className='modal'>\n                <span className='close' onClick={this.handleOnClickClose}>\n                  &times;\n                </span>\n                <img className='modal-content' alt='asd' src={link} />\n                <div id='caption'>{title}</div>\n              </div>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default Flicker\n","import React, { Component, Fragment } from 'react'\nimport './App.css'\nimport GoogleApiWrapper from './components/GoogleApiWrapper/GoogleApiWrapper'\nimport axios from 'axios'\n\nimport Weather from './components/Weather/Weather'\nimport CityInfo from './components/CityInfo/CityInfo'\nimport News from './components/News/News'\nimport NewsAPI from 'newsapi'\nimport Flicker from './components/Flicker/Flicker'\n\nconst newsapi = new NewsAPI('bedefbb1d71346c2a2795c2113f469fd')\n\nclass App extends Component {\n  state = {\n    lat: 41.69452881805707,\n    lng: -8.846923664502128,\n    country: '',\n    country_code: '',\n    street: '',\n    street_number: '',\n    city: '',\n    fetchingAddress: true,\n    fetchingFlag: true,\n    fetchingError: false,\n    news: null,\n    fetchingNews: true,\n    fetchingPhotos: true,\n    photos: null,\n    timeZone: '',\n    fetchingTime: true\n  }\n\n  componentDidMount () {\n    this.getAddress()\n    this.getFlicker()\n    this.getTime()\n  }\n\n  setNewCoords = (lat, lng) => {\n    this.setState({ lat, lng }, () => {\n      this.getAddress()\n      this.getFlicker()\n      this.getTime()\n    })\n  }\n\n  getAddress = () => {\n    this.setState({\n      fetchingAddress: true,\n      fetchingError: false\n    })\n\n    let { lat, lng } = this.state\n    let street = ''\n    let street_number = ''\n    let city = ''\n    let country = ''\n    let country_code = ''\n    let old_country = this.state.country\n    let old_country_code = this.state.country_code\n\n    axios\n      .get(\n        'https://maps.googleapis.com/maps/api/geocode/json?language=EN&latlng=' +\n          lat +\n          ',' +\n          lng +\n          '&key=AIzaSyCFmio79TncN-TlcoFdOX1K8WPxIQHUwxw'\n      )\n      .then(result => {\n        try {\n          // console.log('address', result)\n          let addressObject = result.data.results['0'].address_components\n          addressObject.forEach(a => {\n            if (a.types.includes('route')) street = a.long_name\n            if (a.types.includes('street_number')) street_number = a.long_name\n            else if (a.types.includes('locality')) city = a.long_name\n            else if (a.types.includes('country')) {\n              country = a.long_name\n              country_code = a.short_name\n            }\n          })\n          this.setState({\n            street,\n            street_number,\n            city,\n            country,\n            country_code,\n            fetchingAddress: false\n          })\n          if (country !== '' && country !== old_country) {\n            this.getCountryInfo()\n          }\n          if (country_code !== '' && country_code !== old_country_code) {\n            this.getNews()\n          }\n        } catch {\n          this.setState({\n            fetchingError: true\n          })\n        }\n      })\n  }\n\n  getNews = () => {\n    this.setState({ fetchingNews: true })\n    const { country_code } = this.state\n    newsapi.v2\n      .topHeadlines({\n        category: 'technology',\n        language: country_code,\n        country: country_code\n      })\n      .then(response => {\n        // console.log('news', response.articles)\n        this.setState({ news: response.articles, fetchingNews: false })\n      })\n  }\n\n  getCountryInfo = () => {\n    this.setState({ fetchingFlag: true })\n    axios\n      .get('https://restcountries.eu/rest/v2/name/' + this.state.country)\n      .then(result => {\n        this.setState({\n          population: result.data['0'],\n          fetchingFlag: false\n        })\n      })\n  }\n\n  getTime = () => {\n    // this.setState({ fetchingTime: true })\n    const old_timezone = this.state.timeZone\n    const { lat, lng } = this.state\n    axios\n      .get(\n        'https://maps.googleapis.com/maps/api/timezone/json?location=' +\n          lat +\n          ',' +\n          lng +\n          '&timestamp=1331161200&key=AIzaSyCFmio79TncN-TlcoFdOX1K8WPxIQHUwxw'\n      )\n      .then(result => {\n        const timeZone = result.data.timeZoneId\n        if(old_timezone !== timeZone) {\n          this.setState({ timeZone: result.data.timeZoneId, fetchingTime: false })\n        }\n      })\n  }\n\n  getFlicker = () => {\n    this.setState({ fetchingPhotos: true })\n    const { lat, lng } = this.state\n    let photos = []\n    const link =\n      'https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=4c09233afcaed9679bba2f43c60206b3&lat=' +\n      lat +\n      '&lon=' +\n      lng +\n      '&per_page=9&format=json&nojsoncallback=1'\n    axios.get(link).then(result => {\n      // console.log(result)\n      photos = result.data.photos.photo\n      // let photosIds = photos.map(p => (p.id, p.secret) )\n      // console.log('ps', result.data.photos.photo)\n      this.setState({ photos: photos, fetchingPhotos: false })\n    })\n  }\n\n  render () {\n    let {\n      lat,\n      lng,\n      street,\n      street_number,\n      city,\n      country,\n      fetchingAddress,\n      fetchingFlag,\n      population,\n      fetchingError,\n      news,\n      fetchingNews,\n      photos,\n      fetchingPhotos,\n      fetchingTime,\n      timeZone\n    } = this.state\n    return (\n      <Fragment>\n        <div className='container'>\n          <div className='map_item'>\n            <GoogleApiWrapper\n              setNewCoords={this.setNewCoords}\n              lat={lat}\n              lng={lng}\n            />\n          </div>\n          <div className='weather_item'>\n            <Weather lat={lat} lng={lng} />\n          </div>\n        </div>\n        <div className='container'>\n          <div className='extra_item'>\n            <CityInfo\n              street={street}\n              street_number={street_number}\n              city={city}\n              country={country}\n              fetchingAddress={fetchingAddress}\n              fetchingFlag={fetchingFlag}\n              population={population}\n              fetchingError={fetchingError}\n              timeZone={timeZone}\n              fetchingTime={fetchingTime}\n            />\n          </div>\n          <div className='extra_item'>\n            <Flicker photos={photos} fetchingPhotos={fetchingPhotos} />\n          </div>\n          <div className='extra_item'>\n            <News news={news} country={country} fetchingNews={fetchingNews} />\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}